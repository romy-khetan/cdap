#!/usr/bin/env bash

# Copyright Â© 2014-2016 Cask Data, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.














start() {
  if [ ${MAIN_CMD} ]; then
    _start_bin || die "Failed to start ${APP} service"
  elif [ ${MAIN_CLASS} ]; then
    _start_java || die "Failed to start Java ${APP} service"
  else
    die "Neither MAIN_CLASS or MAIN_CMD are set.  Please set one in ${CDAP_CONF}/cdap-env.sh"
  fi
}

stop() {
  if [ -f ${pid} ]; then
    pidToKill=$(<${pid})
    # kill -0 == see if the PID exists
    if kill -0 ${pidToKill} > /dev/null 2>&1; then
      echo -n "Stopping ${APP}"
      echo "$(date) Stopping ${APP}" >>${loglog}
      kill ${pidToKill} > /dev/null 2>&1
      # TODO: infinite loops are bad, mm'kay?
      while kill -0 ${pidToKill} > /dev/null 2>&1; do
        echo -n "."
        sleep 1
      done
      echo
    else
      retval=$?
      echo "Nothing to stop because kill -0 of pid ${pidToKill} failed with status ${retval}"
    fi
    rm -f $pid
  else
    echo "Nothing to stop because no pid file ${pid}"
  fi
}

restart() {
  stop
  start
}

_status() {
  case ${PLATFORM} in
    RHEL)
      rh_status > /dev/null 2>&1
      retval=$?
    ;;
    UBUNTU)
      ub_status > /dev/null 2>&1
      retval=$?
    ;;
  esac
  return ${retval}
}

rh_status() {
  echo "Checking status"
  # call sourced status function
  status -p ${pid}
}

ub_status() {
  echo "Checking status"
  # call sourced status function
  status_of_proc -p ${pid} ${0} ${APP}
}













case ${1} in
  start|stop|restart) ${1} ;;
  status)
    _status
    statuscode=$?
    if [ ${statuscode} -eq 0 ]; then
      echo "CDAP ${APP} ($(<${pid})) is running"
    else
      echo "CDAP ${APP} is stopped"
      exit $statuscode
    fi
    ;;
  condrestart) _status && restart ;;  
  run) shift; run ${@} ;;
  classpath)
    cdap_set_classpath "${COMPONENT_HOME}" "${CDAP_CONF}"
    cdap_set_java || exit 1
    cdap_set_hbase || exit 1
    echo "${CLASSPATH}"
  ;;

  *) die "Usage: $0 {start|stop|restart|status|condrestart|run}" ;;
esac
exit $? 
